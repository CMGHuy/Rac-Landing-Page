{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/alert-dialog/alert-dialog.component.ts","./src/app/alert-dialog/alert-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/block-page/block-page.component.ts","./src/app/block-page/block-page.component.html","./src/app/landing-page/backend.service.ts","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/loader-upload-file/loader-upload-file.component.ts","./src/app/loader-upload-file/loader-upload-file.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { ClipboardService } from 'ngx-clipboard';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\n\r\n@Component({\r\n  selector: 'app-alert-dialog',\r\n  templateUrl: './alert-dialog.component.html',\r\n  styleUrls: ['./alert-dialog.component.css']\r\n})\r\n\r\nexport class AlertDialogComponent implements OnInit {\r\n\r\n  constructor(\r\n    private clipboardService: ClipboardService,\r\n    private clipboard: Clipboard,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data:any,\r\n    public dialogRef:\r\n    MatDialogRef<AlertDialogComponent>) { }\r\n\r\n  contentToClipboard: string = '';\r\n  successImageSource: string = '../../assets/images/successfulUpload.png';\r\n  failImageSource: string = '../../assets/images/failedUpload.png';\r\n  dataKey: any;\r\n  browser: any;\r\n  copy : boolean;\r\n  isCopied: boolean;\r\n\r\n  ngOnInit() {\r\n    const {detect} = require('detect-browser');\r\n    const browserDetected = detect();\r\n    this.browser = browserDetected.name;\r\n    this.dataKey = this.data.dataKey;\r\n    for (let line of this.dataKey)\r\n    {\r\n      this.contentToClipboard += line;\r\n      this.contentToClipboard += \"\\n\";\r\n    }\r\n  }\r\n\r\n  copied(event){\r\n    if (event.isSuccess){\r\n      console.log(\"Copy successful\");\r\n      alert(\"Copy successful\");\r\n    }\r\n    else{\r\n      console.log(\"Copy failed\" +\r\n                  \"This functionality is blocked by your browser.\\n\" +\r\n                  \"Please use a different browser or copy the error messages manually.\");\r\n      alert(\"Copy failed:\\n\" +\r\n            \"This functionality is blocked by your browser.\\n\" +\r\n            \"Please use a different browser or copy the error messages manually.\");\r\n    }\r\n  }\r\n\r\n  /*downloadFile(){\r\n      //you can enter your own file name and extension\r\n      this.writeContents(this.contentToClipboard, 'Sample File'+'.txt', 'text/plain');\r\n  }\r\n\r\n  writeContents(content, fileName, contentType) {\r\n    var a = document.createElement('a');\r\n    var file = new Blob([content], {type: contentType});\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }*/\r\n}\r\n","<mat-dialog-actions align=\"end\">\r\n  <button class=\"closeDialogButton\" mat-dialog-close>&#10006;</button>\r\n</mat-dialog-actions>\r\n<div align=\"center\">\r\n  <ng-container *ngIf = \"data.errorCode == '0'; then thenBlock; else elseBlock\"></ng-container>\r\n  <ng-template #thenBlock>\r\n      <img align=\"center\" src=\"{{successImageSource}}\" alt=\"successful Upload\">\r\n  </ng-template>\r\n  <ng-template #elseBlock>\r\n      <img align=\"center\" src=\".{{failImageSource}}\" alt=\"failed Upload\">\r\n  </ng-template>\r\n</div>\r\n\r\n<mat-dialog-content align=\"center\" *ngIf=\"dataKey.length <= 8\" class=\"dialogContentBelow3\">\r\n  <div *ngFor=\"let text of dataKey\">\r\n    <p style=\"font-size: 25px;\">{{text}}</p>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-content align=\"center\" tabindex=\"0\" *ngIf=\"dataKey.length > 8\" class=\"mat-typography dialogContentOver3\">\r\n  <div *ngFor=\"let text of dataKey\">\r\n    <p style=\"font-size: 20px;\">{{text}}</p>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"center\" style=\"margin-top:30px;\">\r\n <!-- <button\r\n          (click)=\"copyData(contentToClipboard)\"\r\n          class=\"copyButton\" mat-button> Copy to clipboard\r\n  </button>-->\r\n\r\n  <button ngxClipboard [cbContent]=\"contentToClipboard\" (cbOnError)=\"copied($event)\" (cbOnSuccess)=\"copied($event)\"\r\n          class=\"copyButton\" mat-button>Copy to clipboard</button>\r\n<!--  (click)=\"handleClipboardResponse()\" (click)=\"downloadFile()\"-->\r\n<!--  [cdkCopyToClipboard]=\"contentToClipboard\" [cdkCopyToClipboardAttempts]=\"100\"-->\r\n<!--  [cdkCopyToClipboard] = \"contentToClipboard\"-->\r\n  <!--(cdkCopyToClipboardCopied) = \"checkCopied($event)\"-->\r\n <!-- <button (click)=\"copyAchievements()\"\r\n          class=\"copyButton\" mat-button> Copy to clipboard\r\n  </button>-->\r\n<!--  (cdkCopyToClipboardCopied) = \"checkCopied($event)\"-->\r\n  <!--<button class=\"copyButton\" mat-button (click)=\"copyToClipboard()\"> Copy to clipboard\r\n  </button>-->\r\n</mat-dialog-actions>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\ttitle = 'RacLPUI';\r\n\tcompanyTitel = document.getElementById(\"companyVariable\").textContent;\r\n\ttypeImport = document.getElementById(\"importTypeVariable\").textContent;\r\n\ttoken = document.getElementById(\"token\").textContent;\r\n\tselectedPage:string;\r\n\r\n\t//@Input() tokenValue: any;\r\n  constructor()\r\n  {\r\n  }\r\n\tngOnInit()\r\n\t{\r\n   this.selectedPage = this.typeImport;\r\n  }\r\n}\r\n\r\n\r\n","<div>\r\n  <landing-page-root [(component)] = \"selectedPage\"  [typeImport] = \"typeImport\" [token] = \"token\" [companyTitel] = \"companyTitel\"></landing-page-root>\r\n</div>\r\n","import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatExpansionModule} from \"@angular/material/expansion\";\r\nimport { MatInputModule} from \"@angular/material/input\";\r\nimport { MatDialogModule} from \"@angular/material/dialog\";\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertDialogComponent } from './alert-dialog/alert-dialog.component';\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { LoaderUploadFileComponent } from './loader-upload-file/loader-upload-file.component';\r\nimport { BlockPageComponent } from './block-page/block-page.component';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingPageComponent,\r\n    AlertDialogComponent,\r\n    LoaderUploadFileComponent,\r\n    BlockPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    ClipboardModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [AlertDialogComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-block-page',\r\n  templateUrl: './block-page.component.html',\r\n  styleUrls: ['./block-page.component.css']\r\n})\r\nexport class BlockPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"ISO-8859-1\">\r\n    <title>Error</title>\r\n  </head>\r\n  <body>\r\n    <h1>VW backoffice has started reimbursement processing, it is no longer possible to upload data.</h1>\r\n    <h1>Please contact your key account manager if necessary.</h1>\r\n  </body>\r\n</html>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders , HttpResponse} from '@angular/common/http';\r\nimport { RacResponse } from '../models/racresponse.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BackendService {\r\n  backendUrl:string = '/v1/lp/upload';\r\n  httpOptions = {\r\n    //headers: new HttpHeaders({ 'Content-Type': 'multipart/form-data' }),\r\n    observe: 'events' as const,\r\n    params: {} as any\r\n  }\r\n  constructor(private http: HttpClient) {}\r\n  upload(data,token:string) {\r\n    this.httpOptions.params = {token: token};\r\n    return this.http.post<RacResponse>(this.backendUrl, data, this.httpOptions);\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit,Output, Input, EventEmitter } from '@angular/core';\r\nimport { BackendService } from './backend.service';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { AlertDialogComponent } from \"../alert-dialog/alert-dialog.component\";\r\nimport { Router } from '@angular/router';\r\nimport ImportTypeConfiguration from '../../../../persistent/templatesXLSX/ImportTypeMapping.json';\r\n\r\n@Component({\r\n  selector: 'landing-page-root',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\n\r\nexport class LandingPageComponent implements OnInit {\r\n  title = 'RaC-Landing-Page';\r\n  fileNameDisplay:string = null;\r\n  defaultLabelText:string = \"Choose a file\";\r\n  wrongFileText = ['Invalid input Format, only CSV, XLSX, XLS is allowed!'];\r\n  successfulText = ['File uploaded successfully! You will receive a confirmation email upon successful import.'];\r\n  boxShadowStyle: string = '0 -6px 10px 0 #AED6F1  , 0 6px 10px 0 #AED6F1 ';\r\n  fileUpload:any = null;\r\n  uploadMessage:any = null;\r\n  errorCode:any = null;\r\n  fakeButtonOn:boolean = true;\r\n  submitButtonOn:boolean = false;\r\n  loaderOn:boolean = false;\r\n  importName: string = \"RIL\";\r\n\r\n  @Input() typeImport: string;\r\n  @Input() companyTitel: string;\r\n  @Input() token: string;\r\n  @Input() component: string;\r\n  @Input() importTypeFullName: string;\r\n  @Output() componentChange = new EventEmitter<string>();\r\n\r\n  constructor(private backendService: BackendService, private dialog: MatDialog, private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fileNameDisplay = this.defaultLabelText;\r\n    this.showFullImportType();\r\n  }\r\n\r\n  showFullImportType(){\r\n    const importTypeData = JSON.parse(JSON.stringify(ImportTypeConfiguration));\r\n    for (let prop in importTypeData){\r\n      if (this.typeImport == prop){\r\n          this.importTypeFullName = importTypeData[prop];\r\n          console.log(this.importTypeFullName);\r\n          console.log(this.typeImport);\r\n      }\r\n    }\r\n  }\r\n\r\n  setComponentOff(){\r\n    this.component = 'blockedPage';\r\n    this.componentChange.emit(this.component);\r\n    console.log(this.component);\r\n  }\r\n\r\n  verifyFile(event:any){\r\n    let fileName = event.target.files[0].name;\r\n    let allowedExtensions = /(\\.xlsx|\\.xls|\\.xlt|\\.csv)$/i;\r\n    if (!allowedExtensions.exec(fileName))\r\n    {\r\n      fileName = '';\r\n      this.fileNameDisplay = this.defaultLabelText;\r\n      this.openDialog(this.wrongFileText,1);\r\n      this.fakeButtonOn = true ;\r\n      this.submitButtonOn = false;\r\n    }\r\n    else\r\n    {\r\n      this.fileNameDisplay = fileName;\r\n      this.fileUpload = event.target.files.item(0);\r\n      console.log(this.fileUpload);\r\n      this.fakeButtonOn = false ;\r\n      this.submitButtonOn = true;\r\n    }\r\n    event.target.value = null;\r\n  }\r\n\r\n  openDialog(inputData:any,inputErrorCode:any){\r\n    this.dialog.open(AlertDialogComponent,\r\n      {\r\n        data:\r\n          {\r\n            errorCode: inputErrorCode,\r\n            dataKey: inputData,\r\n          }\r\n      });\r\n  }\r\n\r\n  onSubmit(){\r\n    const formData = new FormData();\r\n    formData.append('csvfile', this.fileUpload);\r\n    this.loaderOn = true;\r\n    this.backendService.upload(formData,this.token).subscribe(\r\n      (res) =>  {\r\n        if (res instanceof  HttpResponse) {\r\n          console.log(res);\r\n          this.uploadMessage = res.body.errorMessages;\r\n          this.errorCode = res.body.errorCode;\r\n          if (this.uploadMessage && this.errorCode)\r\n          {\r\n            this.loaderOn = false;\r\n            if ( res.body.errorMessages[0] == \"BlockedByBo\")\r\n            {\r\n              this.setComponentOff();\r\n              // this.router.navigate(['./block-page'],{replaceUrl:true})\r\n              //this.zone.run(() => { this.router.navigate(['./block-page'], { replaceUrl: true }); });\r\n              console.log(\"navigate successful\");\r\n            }\r\n            else{\r\n              if (this.errorCode == \"0\"){\r\n                this.uploadMessage = this.successfulText;\r\n              }\r\n              this.openDialog(this.uploadMessage,this.errorCode);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    )\r\n  }\r\n}\r\n","<!--<div *ngIf=\"componentOn\" style=\"background-color:#006384; width: 100%; height: 100%; overflow-x: hidden;\">-->\r\n<!-- Toolbar -->\r\n<div class=\"toolbar\" role=\"banner\">\r\n  <img id=\"VWLogo\" alt=\"VW Logo\" src = \"../../assets/images/VW_Fleet_Logo.png\"/>\r\n</div>\r\n\r\n<!--Content-->\r\n<div class=\"content\" role=\"main\">\r\n  <!--  Company Name-->\r\n  <h4>{{companyTitel}}</h4>\r\n  <!--  Import Type-->\r\n  <h2>{{importTypeFullName}}</h2>\r\n\r\n  <!--  Container-->\r\n  <div class=\"container\" align=\"center\">\r\n    <!--    Choose file -->\r\n    <div >\r\n      <input type='file' class=\"custom-file-input custom-file-input-1\" id=\"customFile\" name=\"filename\"\r\n             (change)=\"verifyFile($event)\" style=\"display: none\"  required/>\r\n      <label for=\"customFile\">\r\n              <span width=\"20\" height=\"17\" viewBox=\"0 0 20 17\">\r\n                <mat-icon>cloud_upload</mat-icon>\r\n              </span>\r\n        <span>{{fileNameDisplay}}</span>\r\n      </label>\r\n    </div>\r\n\r\n    <!--      Submit Button-->\r\n    <button type=\"submit\" id=\"submitButton\" class=\"submit-button\" *ngIf = \"submitButtonOn\" (click)=\"onSubmit()\">\r\n      <span> Submit </span>\r\n    </button>\r\n    <button type=\"button\" id=\"fakeSubmitButton\" class=\"submit-button\" disabled=\"disabled\" *ngIf=\"fakeButtonOn\">\r\n      Submit\r\n      <i class=\"fa fa-minus-circle\"></i>\r\n    </button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!--Uploading Loader-->\r\n<app-loader-upload-file [loaderEnable] = \"loaderOn\"></app-loader-upload-file>\r\n\r\n<!--</div>\r\n<router-outlet></router-outlet>-->\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader-upload-file',\r\n  templateUrl: './loader-upload-file.component.html',\r\n  styleUrls: ['./loader-upload-file.component.css']\r\n})\r\nexport class LoaderUploadFileComponent implements OnInit {\r\n  @Input() loaderEnable: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"overlay\" *ngIf=\"loaderEnable\">\r\n  <div class=\"center-spinner\">\r\n    <mat-progress-spinner diameter=200 mode=\"indeterminate\">\r\n    </mat-progress-spinner>\r\n    <!--<p id=\"uploadingText\">\r\n      <strong>Uploading</strong>\r\n    </p>-->\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}