{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/alert-dialog/alert-dialog.component.ts","webpack:///src/app/alert-dialog/alert-dialog.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/block-page/block-page.component.ts","webpack:///src/app/block-page/block-page.component.html","webpack:///src/app/landing-page/backend.service.ts","webpack:///src/app/landing-page/landing-page.component.ts","webpack:///src/app/landing-page/landing-page.component.html","webpack:///src/app/loader-upload-file/loader-upload-file.component.ts","webpack:///src/app/loader-upload-file/loader-upload-file.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertDialogComponent","clipboardService","clipboard","data","dialogRef","contentToClipboard","successImageSource","failImageSource","detect","browserDetected","browser","name","dataKey","line","event","isSuccess","console","log","alert","copied","selector","templateUrl","styleUrls","routes","AppRoutingModule","forRoot","imports","AppComponent","title","companyTitel","document","getElementById","textContent","typeImport","token","selectedPage","AppModule","declarations","providers","bootstrap","entryComponents","BlockPageComponent","BackendService","http","backendUrl","httpOptions","observe","params","post","providedIn","LandingPageComponent","backendService","dialog","router","fileNameDisplay","defaultLabelText","wrongFileText","successfulText","boxShadowStyle","fileUpload","uploadMessage","errorCode","fakeButtonOn","submitButtonOn","loaderOn","importName","componentChange","showFullImportType","importTypeData","JSON","parse","stringify","prop","importTypeFullName","component","emit","fileName","target","files","allowedExtensions","exec","openDialog","item","value","inputData","inputErrorCode","open","formData","FormData","append","upload","subscribe","res","body","errorMessages","setComponentOff","err","verifyFile","LoaderUploadFileComponent","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatDialogRef } from \"@angular/material/dialog\";\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { ClipboardService } from 'ngx-clipboard';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\n\r\n@Component({\r\n  selector: 'app-alert-dialog',\r\n  templateUrl: './alert-dialog.component.html',\r\n  styleUrls: ['./alert-dialog.component.css']\r\n})\r\n\r\nexport class AlertDialogComponent implements OnInit {\r\n\r\n  constructor(\r\n    private clipboardService: ClipboardService,\r\n    private clipboard: Clipboard,\r\n    @Inject(MAT_DIALOG_DATA)\r\n    public data:any,\r\n    public dialogRef:\r\n    MatDialogRef<AlertDialogComponent>) { }\r\n\r\n  contentToClipboard: string = '';\r\n  successImageSource: string = '../../assets/images/successfulUpload.png';\r\n  failImageSource: string = '../../assets/images/failedUpload.png';\r\n  dataKey: any;\r\n  browser: any;\r\n  copy : boolean;\r\n  isCopied: boolean;\r\n\r\n  ngOnInit() {\r\n    const {detect} = require('detect-browser');\r\n    const browserDetected = detect();\r\n    this.browser = browserDetected.name;\r\n    this.dataKey = this.data.dataKey;\r\n    for (let line of this.dataKey)\r\n    {\r\n      this.contentToClipboard += line;\r\n      this.contentToClipboard += \"\\n\";\r\n    }\r\n  }\r\n\r\n  copied(event){\r\n    if (event.isSuccess){\r\n      console.log(\"Copy successful\");\r\n      alert(\"Copy successful\");\r\n    }\r\n    else{\r\n      console.log(\"Copy failed\" +\r\n                  \"This functionality is blocked by your browser.\\n\" +\r\n                  \"Please use a different browser or copy the error messages manually.\");\r\n      alert(\"Copy failed:\\n\" +\r\n            \"This functionality is blocked by your browser.\\n\" +\r\n            \"Please use a different browser or copy the error messages manually.\");\r\n    }\r\n  }\r\n\r\n  /*downloadFile(){\r\n      //you can enter your own file name and extension\r\n      this.writeContents(this.contentToClipboard, 'Sample File'+'.txt', 'text/plain');\r\n  }\r\n\r\n  writeContents(content, fileName, contentType) {\r\n    var a = document.createElement('a');\r\n    var file = new Blob([content], {type: contentType});\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = fileName;\r\n    a.click();\r\n  }*/\r\n}\r\n","<mat-dialog-actions align=\"end\">\r\n  <button class=\"closeDialogButton\" mat-dialog-close>&#10006;</button>\r\n</mat-dialog-actions>\r\n<div align=\"center\">\r\n  <ng-container *ngIf = \"data.errorCode == '0'; then thenBlock; else elseBlock\"></ng-container>\r\n  <ng-template #thenBlock>\r\n      <img align=\"center\" src=\"{{successImageSource}}\" alt=\"successful Upload\">\r\n  </ng-template>\r\n  <ng-template #elseBlock>\r\n      <img align=\"center\" src=\".{{failImageSource}}\" alt=\"failed Upload\">\r\n  </ng-template>\r\n</div>\r\n\r\n<mat-dialog-content align=\"center\" *ngIf=\"dataKey.length <= 8\" class=\"dialogContentBelow3\">\r\n  <div *ngFor=\"let text of dataKey\">\r\n    <p style=\"font-size: 25px;\">{{text}}</p>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-content align=\"center\" tabindex=\"0\" *ngIf=\"dataKey.length > 8\" class=\"mat-typography dialogContentOver3\">\r\n  <div *ngFor=\"let text of dataKey\">\r\n    <p style=\"font-size: 20px;\">{{text}}</p>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"center\" style=\"margin-top:30px;\">\r\n <!-- <button\r\n          (click)=\"copyData(contentToClipboard)\"\r\n          class=\"copyButton\" mat-button> Copy to clipboard\r\n  </button>-->\r\n\r\n  <button ngxClipboard [cbContent]=\"contentToClipboard\" (cbOnError)=\"copied($event)\" (cbOnSuccess)=\"copied($event)\"\r\n          class=\"copyButton\" mat-button>Copy to clipboard</button>\r\n<!--  (click)=\"handleClipboardResponse()\" (click)=\"downloadFile()\"-->\r\n<!--  [cdkCopyToClipboard]=\"contentToClipboard\" [cdkCopyToClipboardAttempts]=\"100\"-->\r\n<!--  [cdkCopyToClipboard] = \"contentToClipboard\"-->\r\n  <!--(cdkCopyToClipboardCopied) = \"checkCopied($event)\"-->\r\n <!-- <button (click)=\"copyAchievements()\"\r\n          class=\"copyButton\" mat-button> Copy to clipboard\r\n  </button>-->\r\n<!--  (cdkCopyToClipboardCopied) = \"checkCopied($event)\"-->\r\n  <!--<button class=\"copyButton\" mat-button (click)=\"copyToClipboard()\"> Copy to clipboard\r\n  </button>-->\r\n</mat-dialog-actions>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\ttitle = 'RacLPUI';\r\n\tcompanyTitel = document.getElementById(\"companyVariable\").textContent;\r\n\ttypeImport = document.getElementById(\"importTypeVariable\").textContent;\r\n\ttoken = document.getElementById(\"token\").textContent;\r\n\tselectedPage:string;\r\n\r\n\t//@Input() tokenValue: any;\r\n  constructor()\r\n  {\r\n  }\r\n\tngOnInit()\r\n\t{\r\n   this.selectedPage = this.typeImport;\r\n  }\r\n}\r\n\r\n\r\n","<div>\r\n  <landing-page-root [(component)] = \"selectedPage\"  [typeImport] = \"typeImport\" [token] = \"token\" [companyTitel] = \"companyTitel\"></landing-page-root>\r\n</div>\r\n","import { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatExpansionModule} from \"@angular/material/expansion\";\r\nimport { MatInputModule} from \"@angular/material/input\";\r\nimport { MatDialogModule} from \"@angular/material/dialog\";\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertDialogComponent } from './alert-dialog/alert-dialog.component';\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { LoaderUploadFileComponent } from './loader-upload-file/loader-upload-file.component';\r\nimport { BlockPageComponent } from './block-page/block-page.component';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingPageComponent,\r\n    AlertDialogComponent,\r\n    LoaderUploadFileComponent,\r\n    BlockPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatExpansionModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    ClipboardModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [AlertDialogComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-block-page',\r\n  templateUrl: './block-page.component.html',\r\n  styleUrls: ['./block-page.component.css']\r\n})\r\nexport class BlockPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"ISO-8859-1\">\r\n    <title>Error</title>\r\n  </head>\r\n  <body>\r\n    <h1>VW backoffice has started reimbursement processing, it is no longer possible to upload data.</h1>\r\n    <h1>Please contact your key account manager if necessary.</h1>\r\n  </body>\r\n</html>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders , HttpResponse} from '@angular/common/http';\r\nimport { RacResponse } from '../models/racresponse.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BackendService {\r\n  backendUrl:string = '/v1/lp/upload';\r\n  httpOptions = {\r\n    //headers: new HttpHeaders({ 'Content-Type': 'multipart/form-data' }),\r\n    observe: 'events' as const,\r\n    params: {} as any\r\n  }\r\n  constructor(private http: HttpClient) {}\r\n  upload(data,token:string) {\r\n    this.httpOptions.params = {token: token};\r\n    return this.http.post<RacResponse>(this.backendUrl, data, this.httpOptions);\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit,Output, Input, EventEmitter } from '@angular/core';\r\nimport { BackendService } from './backend.service';\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { AlertDialogComponent } from \"../alert-dialog/alert-dialog.component\";\r\nimport { Router } from '@angular/router';\r\nimport ImportTypeConfiguration from '../../../../persistent/templatesXLSX/ImportTypeMapping.json';\r\n\r\n@Component({\r\n  selector: 'landing-page-root',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css']\r\n})\r\n\r\nexport class LandingPageComponent implements OnInit {\r\n  title = 'RaC-Landing-Page';\r\n  fileNameDisplay:string = null;\r\n  defaultLabelText:string = \"Choose a file\";\r\n  wrongFileText = ['Invalid input Format, only CSV, XLSX, XLS is allowed!'];\r\n  successfulText = ['File uploaded successfully! You will receive a confirmation email upon successful import.'];\r\n  boxShadowStyle: string = '0 -6px 10px 0 #AED6F1  , 0 6px 10px 0 #AED6F1 ';\r\n  fileUpload:any = null;\r\n  uploadMessage:any = null;\r\n  errorCode:any = null;\r\n  fakeButtonOn:boolean = true;\r\n  submitButtonOn:boolean = false;\r\n  loaderOn:boolean = false;\r\n  importName: string = \"RIL\";\r\n\r\n  @Input() typeImport: string;\r\n  @Input() companyTitel: string;\r\n  @Input() token: string;\r\n  @Input() component: string;\r\n  @Input() importTypeFullName: string;\r\n  @Output() componentChange = new EventEmitter<string>();\r\n\r\n  constructor(private backendService: BackendService, private dialog: MatDialog, private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fileNameDisplay = this.defaultLabelText;\r\n    this.showFullImportType();\r\n  }\r\n\r\n  showFullImportType(){\r\n    const importTypeData = JSON.parse(JSON.stringify(ImportTypeConfiguration));\r\n    for (let prop in importTypeData){\r\n      if (this.typeImport == prop){\r\n          this.importTypeFullName = importTypeData[prop];\r\n          console.log(this.importTypeFullName);\r\n          console.log(this.typeImport);\r\n      }\r\n    }\r\n  }\r\n\r\n  setComponentOff(){\r\n    this.component = 'blockedPage';\r\n    this.componentChange.emit(this.component);\r\n    console.log(this.component);\r\n  }\r\n\r\n  verifyFile(event:any){\r\n    let fileName = event.target.files[0].name;\r\n    let allowedExtensions = /(\\.xlsx|\\.xls|\\.xlt|\\.csv)$/i;\r\n    if (!allowedExtensions.exec(fileName))\r\n    {\r\n      fileName = '';\r\n      this.fileNameDisplay = this.defaultLabelText;\r\n      this.openDialog(this.wrongFileText,1);\r\n      this.fakeButtonOn = true ;\r\n      this.submitButtonOn = false;\r\n    }\r\n    else\r\n    {\r\n      this.fileNameDisplay = fileName;\r\n      this.fileUpload = event.target.files.item(0);\r\n      console.log(this.fileUpload);\r\n      this.fakeButtonOn = false ;\r\n      this.submitButtonOn = true;\r\n    }\r\n    event.target.value = null;\r\n  }\r\n\r\n  openDialog(inputData:any,inputErrorCode:any){\r\n    this.dialog.open(AlertDialogComponent,\r\n      {\r\n        data:\r\n          {\r\n            errorCode: inputErrorCode,\r\n            dataKey: inputData,\r\n          }\r\n      });\r\n  }\r\n\r\n  onSubmit(){\r\n    const formData = new FormData();\r\n    formData.append('csvfile', this.fileUpload);\r\n    this.loaderOn = true;\r\n    this.backendService.upload(formData,this.token).subscribe(\r\n      (res) =>  {\r\n        if (res instanceof  HttpResponse) {\r\n          console.log(res);\r\n          this.uploadMessage = res.body.errorMessages;\r\n          this.errorCode = res.body.errorCode;\r\n          if (this.uploadMessage && this.errorCode)\r\n          {\r\n            this.loaderOn = false;\r\n            if ( res.body.errorMessages[0] == \"BlockedByBo\")\r\n            {\r\n              this.setComponentOff();\r\n              // this.router.navigate(['./block-page'],{replaceUrl:true})\r\n              //this.zone.run(() => { this.router.navigate(['./block-page'], { replaceUrl: true }); });\r\n              console.log(\"navigate successful\");\r\n            }\r\n            else{\r\n              if (this.errorCode == \"0\"){\r\n                this.uploadMessage = this.successfulText;\r\n              }\r\n              this.openDialog(this.uploadMessage,this.errorCode);\r\n            }\r\n          }\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    )\r\n  }\r\n}\r\n","<!--<div *ngIf=\"componentOn\" style=\"background-color:#006384; width: 100%; height: 100%; overflow-x: hidden;\">-->\r\n<!-- Toolbar -->\r\n<div class=\"toolbar\" role=\"banner\">\r\n  <img id=\"VWLogo\" alt=\"VW Logo\" src = \"../../assets/images/VW_Fleet_Logo.png\"/>\r\n</div>\r\n\r\n<!--Content-->\r\n<div class=\"content\" role=\"main\">\r\n  <!--  Company Name-->\r\n  <h4>{{companyTitel}}</h4>\r\n  <!--  Import Type-->\r\n  <h2>{{importTypeFullName}}</h2>\r\n\r\n  <!--  Container-->\r\n  <div class=\"container\" align=\"center\">\r\n    <!--    Choose file -->\r\n    <div >\r\n      <input type='file' class=\"custom-file-input custom-file-input-1\" id=\"customFile\" name=\"filename\"\r\n             (change)=\"verifyFile($event)\" style=\"display: none\"  required/>\r\n      <label for=\"customFile\">\r\n              <span width=\"20\" height=\"17\" viewBox=\"0 0 20 17\">\r\n                <mat-icon>cloud_upload</mat-icon>\r\n              </span>\r\n        <span>{{fileNameDisplay}}</span>\r\n      </label>\r\n    </div>\r\n\r\n    <!--      Submit Button-->\r\n    <button type=\"submit\" id=\"submitButton\" class=\"submit-button\" *ngIf = \"submitButtonOn\" (click)=\"onSubmit()\">\r\n      <span> Submit </span>\r\n    </button>\r\n    <button type=\"button\" id=\"fakeSubmitButton\" class=\"submit-button\" disabled=\"disabled\" *ngIf=\"fakeButtonOn\">\r\n      Submit\r\n      <i class=\"fa fa-minus-circle\"></i>\r\n    </button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!--Uploading Loader-->\r\n<app-loader-upload-file [loaderEnable] = \"loaderOn\"></app-loader-upload-file>\r\n\r\n<!--</div>\r\n<router-outlet></router-outlet>-->\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader-upload-file',\r\n  templateUrl: './loader-upload-file.component.html',\r\n  styleUrls: ['./loader-upload-file.component.css']\r\n})\r\nexport class LoaderUploadFileComponent implements OnInit {\r\n  @Input() loaderEnable: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"overlay\" *ngIf=\"loaderEnable\">\r\n  <div class=\"center-spinner\">\r\n    <mat-progress-spinner diameter=200 mode=\"indeterminate\">\r\n    </mat-progress-spinner>\r\n    <!--<p id=\"uploadingText\">\r\n      <strong>Uploading</strong>\r\n    </p>-->\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}